version: '3.8'

services:
  fib-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fibonacci-app
    ports:
      - "8080:8080"
    environment:
      - REDIS_URL=redis://redis:6379
      - APP_PORT=8080
      - JAVA_OPTS=-Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.SLF4JLogDelegateFactory -Xmx512m
    depends_on:
      - redis
    networks:
      - fib-network
    restart: unless-stopped
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=8080"
      - "prometheus.path=/metrics"

  redis:
    image: redis:7-alpine
    container_name: fibonacci-redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=
    volumes:
      - redis_data:/data
    networks:
      - fib-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: fibonacci-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - fib-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: fibonacci-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - fib-network
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  fib-network:
    driver: bridge
